using Antlers.Sleeper.Models;
using Bogus;

namespace Antlers.UnitTests.Sleeper.Mocks;

public class StatsFaker
{
    public Stats GenerateValidStats()
    {
        var statsFaker = new Faker<Stats>()
            .RuleFor(s => s.Adp2Qb, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpDynasty, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpDynasty2Qb, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpDynastyHalfPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpDynastyPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpDynastyStd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpHalfPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpIdp, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpRookie, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AdpStd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushLng, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushTdLng, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassInt, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassAirYd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PosRankStd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.GamesPlayed, f => f.Random.Float(1, 100))
            .RuleFor(s => s.BonusPassYd400, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RankHalfPpr, f => f.Random.Int(1, 100))
            .RuleFor(s => s.TeamDefSnp, f => f.Random.Float(1, 100))
            .RuleFor(s => s.GamesActive, f => f.Random.Float(1, 100))
            .RuleFor(s => s.Penalty, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassSackYds, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RankStd, f => f.Random.Int(1, 100))
            .RuleFor(s => s.PosRankHalfPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushTd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassYpc, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassLng, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassRushYd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PtsStd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.TeamStSnp, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassRtg, f => f.Random.Float(1, 100))
            .RuleFor(s => s.BonusPassCmp25, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushFd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassIntTd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassAtt, f => f.Random.Float(1, 100))
            .RuleFor(s => s.FumLost, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushAtt, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassRzAtt, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushYpa, f => f.Random.Float(1, 100))
            .RuleFor(s => s.Gs, f => f.Random.Float(1, 100))
            .RuleFor(s => s.TeamOffSnp, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PosRankPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RankPpr, f => f.Random.Int(1, 100))
            .RuleFor(s => s.PassSack, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PenaltyYd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.OffSnp, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassCmp, f => f.Random.Float(1, 100))
            .RuleFor(s => s.CmpPct, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushYac, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PtsHalfPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassYpa, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassCmp40p, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassFd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassYd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushRzAtt, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushRecYd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassTd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.AnytimeTds, f => f.Random.Float(1, 100))
            .RuleFor(s => s.BonusFdQb, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushYd, f => f.Random.Float(1, 100))
            .RuleFor(s => s.Fum, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassTdLng, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PtsPpr, f => f.Random.Float(1, 100))
            .RuleFor(s => s.PassInc, f => f.Random.Float(1, 100))
            .RuleFor(s => s.RushTklLoss, f => f.Random.Float(1, 100));

        return statsFaker.Generate();
    }
}